apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName rootProject.adcelPangleVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
}

group = 'co.adcel.android'
version = rootProject.adcelPangleVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = rootProject.bintrayUser
    key = rootProject.bintrayKey
    configurations = ['archives']
    pkg {
        repo = rootProject.bintrayRepo
        name = 'adcel-pangle'
        userOrg = rootProject.bintrayUserOrg
        licenses = rootProject.bintrayLicenses
        vcsUrl = rootProject.bintrayVcsUrl
        publish = true
        version {
            name = rootProject.adcelPangleVersion
            desc = 'Android AdCel Pangle SDK library'
            released  = new Date()
            vcsTag = rootProject.adcelPangleVersion
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}
